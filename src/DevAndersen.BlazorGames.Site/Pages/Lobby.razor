@page "/lobby/{GameId:int}"
@using DevAndersen.BlazorGames.Core
@using DevAndersen.BlazorGames.Site.ViewExtensions
@inherits BasePage
@implements IDisposable
@inject IIdentityService identityService
@inject GameLobby gameLobby
@inject NavigationManager navigationManager

<div class="text-center p-4 fs-4 fst-italic">Finding a '@GameName' match...</div>

@code
{
    [Parameter]
    public int GameId { get; set; }

    public override string PageTitle => "Lobby";

    private string GameName => GameDefinition.GetDefinition((GameIdentity)GameId)?.Name ?? $"Unnamed game {GameId}";

    public PlayerIdentity? Identity { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            gameLobby.JoinGameEvent += JoinGame;
            GameIdentity gameIdentity = (GameIdentity)GameId;
            Identity = await identityService.LoadIdentityAsync();
            gameLobby.AddPlayerToQueue(Identity.Id, gameIdentity);
        }
    }

    private void JoinGame(GameDefinition gameDefinition, IEnumerable<Guid> playerIds)
    {
        if (Identity != null && Identity.Id != Guid.Empty && playerIds.Contains(Identity.Id))
        {
            navigationManager.NavigateTo(gameDefinition.Page, true);
        }
    }

    public void Dispose()
    {
        if (Identity != null)
        {
            gameLobby.RemovePlayerFromQueue(Identity.Id);
        }
    }
}
